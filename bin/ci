#!/bin/sh
# bin/ci

check_port() {
  local host=${1} && shift
  local port=${1} && shift
  local retries=10
  local wait=5

  until( nc -zv "${host}" "${port}" ); do
    ((retries--))
    if [ $retries -lt 0 ]; then
      echo "Service ${host}:${port} didn't become ready in time."
      exit 1
    fi
    sleep "${wait}"
  done
}

rspec() {
    echo "Waiting for database to become available..."
    check_port ${DB_HOSTNAME:-localhost} ${DB_PORT:-3306}

    # echo "Setting RAILS_ENV..."
    # bin/rails db:environment:set RAILS_ENV=test

    echo "Preparing database..."
    bundle exec rails db:drop db:setup

    echo "Running rspecs..."
    bundle exec rspec $*
}

start() {
    # exit the script with non-zero status if any command fails
    set -e

    # set up logging by redirecting stderr and stdout to a file
    exec 3>&1 4>&2 >log/ci.log 2>&1

    echo "Migration status"
    bundle exec rails db:migrate:status

    echo "Running migrations..."
    bundle exec rails db:migrate

    # clean up any existing files in ./tmp
    rm -rf tmp/*

    # restore stderr and stdout, close file descriptors 3 and 4
    exec 1>&3 2>&4 3>&- 4>&-

    # reverse set -e
    set +e

    echo "Starting rails server..."
    bundle exec rails s -b ${1:-0.0.0.0}
}

case "$1" in
    rspec)
        shift
        rspec $*
        ;;
    start)
        shift
        start $*
        ;;
    *)
        echo "Usage: bin/ci start [<bind_ip>]"
        echo "       bin/ci rspec [<spec/path/to/file.rb>]"
esac
